{"version":3,"sources":["redux/action.js","components/Todo.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["setInput","input","type","payload","updateTodo","text","editTodo","inputText","Todo","dispatch","useDispatch","items","useSelector","state","itemsList","newText","query","searchText","currentItem","listItems","filter","item","includes","map","className","id","key","Value","disabled","isDisabled","onChange","e","target","value","onClick","toggleDisable","sameText","icon","faEdit","faCheck","faTrash","App","disabledButton","trim","console","log","placeholder","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","list","localStorage","getItem","todoList","JSON","parse","initialList","store","createStore","Date","now","setItem","stringify","alert","updatedList","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2bbd0cf.chunk.js","sourcesContent":["export const setInput=(input)=>{\r\n    return {\r\n        type:\"SET_INPUT\",\r\n        payload : input\r\n      }\r\n}\r\n\r\nexport const addTodo=(item)=>{\r\n    return {\r\n        type:\"ADD_TODO\",\r\n        payload : item\r\n      }\r\n}\r\n\r\nexport const updateTodo=(text)=>{\r\n  return {\r\n      type:\"UPDATE_TODO\",\r\n      payload : text\r\n    }\r\n}\r\n\r\nexport const deleteTodo=(key)=>{\r\n  return{\r\n    type : \"DELETE_TODO\",\r\n    payload : key\r\n  }\r\n}\r\n\r\nexport const editTodo =(inputText)=>{\r\n  return{\r\n    type : \"SET_QUERY\",\r\n    payload : inputText\r\n  }\r\n}\r\n\r\nexport const disable=(toggle)=>{\r\n  return{\r\n    type : \"SET_DISABLE\",\r\n    payload : toggle\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { useDispatch , useSelector} from 'react-redux';\r\nimport {deleteTodo, updateTodo , disable , editTodo} from '../redux/action'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash,faCheck} from '@fortawesome/free-solid-svg-icons';\r\nimport './Todo.css';\r\n\r\n\r\nfunction Todo(){\r\n    const dispatch = useDispatch();\r\n    const items= useSelector(state => state.itemsList);\r\n    const newText = useSelector(state=>state.query);\r\n    const searchText = useSelector(state=>state.currentItem.text);\r\n    \r\n    const filteredItems = items.filter(item =>item.text.includes(searchText));\r\n    const listItems = filteredItems.map(item =>{\r\n    return <div className=\"list\" key={item.key}>\r\n     <p>\r\n         <input \r\n         type=\"text\" \r\n         id={item.key} \r\n         Value ={item.text} \r\n         disabled={item.isDisabled}  \r\n         onChange={(e)=>dispatch(editTodo(e.target.value))}\r\n         />\r\n         \r\n         {item.isDisabled &&\r\n        <span1>\r\n        <FontAwesomeIcon \r\n        className=\"faedit\"  \r\n        onClick={()=>\r\n        dispatch(disable({ toggleDisable : false , key : item.key, sameText : item.text}))} icon={faEdit} />\r\n        </span1>\r\n         }\r\n         {!item.isDisabled &&\r\n         <span1>\r\n          <FontAwesomeIcon \r\n          className=\"faedit\" \r\n           onClick={(e)=>\r\n          {\r\n          {newText!==\"\" && dispatch(updateTodo({text : newText , key : item.key ,toggleDisable: true }));}\r\n          {newText===\"\" && dispatch(updateTodo({text : \"\" , key : item.key , toggleDisable: false }));}\r\n          dispatch(editTodo(\"\"));\r\n          }\r\n          }\r\n        icon={faCheck} \r\n         />\r\n         </span1>\r\n         }\r\n\r\n        <span> \r\n        <FontAwesomeIcon className=\"fadelete\" onClick={()=>dispatch(deleteTodo(item.key))} icon={faTrash} />\r\n        </span>\r\n     </p>\r\n    </div>\r\n    }\r\n    )\r\n\r\n    \r\n    \r\n\r\n    return <div>{listItems}</div>;\r\n  }\r\n\r\n  export default Todo;\r\n\r\n\r\n","import './App.css';\nimport { useDispatch , useSelector} from 'react-redux';\nimport Todo from './components/Todo';\nimport {addTodo,setInput} from './redux/action';\nimport './App.css';\n\n\nfunction App() {\n\nconst dispatch = useDispatch();\nconst currentItem = useSelector(state=> state.currentItem);\nvar disabledButton = true;\nif(currentItem.text ===\"\" && currentItem.text.trim()===\"\") disabledButton = true;\nelse  disabledButton =false;\n\nconsole.log(currentItem.text)\nconsole.log(disabledButton);\n  return (\n    <div className=\"App\">\n        <header>\n          \n        <br />\n        <h1>TODO List</h1><br />\n      <input \n      type=\"text\" \n      placeholder=\"Enter / Search\" \n      value={currentItem.text}\n      onChange={(e)=>\n        {e.target.value.length>-1 && \n         dispatch(setInput(e.target.value))\n        }\n      }>\n      </input>\n      <button \n      disabled={disabledButton}\n      onClick={()=>{\n        dispatch(addTodo({text : currentItem.text, key : currentItem.key, isDisabled : currentItem.isDisabled}));\n        dispatch(setInput(\"\"))}\n        }>+</button>\n      \n     <Todo/>\n     </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialList=()=>{\r\n  const list=localStorage.getItem(\"todoList\");\r\n  let todoList =[];\r\n  if(list)\r\n  todoList = JSON.parse(list);\r\n  return todoList;\r\n}\r\n\r\n\r\nconst initialState =\r\n{\r\n    itemsList : initialList(),\r\n    currentItem:{\r\n        text:'',\r\n        key:'',\r\n        isDisabled : null\r\n      },\r\n    query : \"\"\r\n}\r\n\r\nexport const reducer=(state=initialState, {type,payload})=>{\r\nswitch(type)\r\n{\r\n    case \"SET_INPUT\":\r\n    return {...state, currentItem : { text : payload , key : Date.now() , isDisabled : true}};\r\n\r\n    case \"ADD_TODO\" :\r\n    if(payload.text!==\"\" && payload.text.trim()!==\"\")\r\n    {\r\n      localStorage.setItem(\"todoList\", JSON.stringify([...state.itemsList, payload]))\r\n      return {...state, itemsList : [...state.itemsList, payload]}\r\n    }\r\n   \r\n    case \"UPDATE_TODO\":\r\n    state.itemsList.map((item) => \r\n            {  \r\n               if(item.key===payload.key)\r\n               {\r\n                if(!payload.toggleDisable)\r\n                alert(\"TODO FIELD CANNOT BE EMPTY\");\r\n                else\r\n                item.text=payload.text\r\n                item.isDisabled = payload.toggleDisable\r\n               } \r\n             }\r\n             )\r\n    localStorage.setItem(\"todoList\", JSON.stringify([...state.itemsList]))\r\n    return{...state, itemsList :  [...state.itemsList]}\r\n\r\n    case \"DELETE_TODO\" :\r\n    const updatedList = state.itemsList.filter(item => item.key !==payload);\r\n    localStorage.setItem(\"todoList\", JSON.stringify(updatedList))\r\n    return {...state ,itemsList : updatedList}\r\n\r\n    case \"SET_DISABLE\" :\r\n        state.itemsList.map((item) => \r\n        {  \r\n           if(item.key===payload.key)\r\n           {\r\n            item.isDisabled=payload.toggleDisable\r\n           }\r\n          \r\n         })\r\n    return{...state, itemsList : [...state.itemsList] , query : payload.sameText}\r\n\r\n    case \"SET_QUERY\":\r\n    return {...state, query: payload}\r\n\r\n    default:\r\n    return state\r\n}\r\n}\r\n\r\n","import { createStore } from \"redux\";\r\n\r\nimport { reducer} from \"./reducer\";\r\n//import { combineReducers } from \"redux\";\r\n\r\n//const allReducers = combineReducers({characters : charReducer })\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n//store.subscribe(()=>{console.log(store.getState())});\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store'\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}